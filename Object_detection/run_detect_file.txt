step 1 : git clone https://github.com/ultralytics/yolov5.git

step 2 : cd yolov5

step 3 : conda create -n yolov5 python=3.11 -y

step 4 : conda activate yolov5 / source activate yolov5

step 5 : pip install -r requirements.txt
       : pip uinstall torch
       : pip uninstall torchvision

step 6 : pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu124

step 6 : python detect.py --weights yolov5s.pt --source 0 --device 'cpu'
 
step 7 : python detect.py --weights yolov5s.pt --source 0 --device 0

step 8 : python detect.py --weights yolov5n.pt --source 0 --device 0

step 9 : python detect.py --weights yolov5n.pt --device 0 --source ./data/images/bus.jpg

step 10 : python detect.py --weights yolov5l.pt --device 0 --source ./data/images/bus.jpg

step 11 : (GPU) pip install -r requirements.txt coremltools onnx onnx-simplifier onnxruntime-gpu openvino-dev tensorflow
        : (CPU) pip install -r requirements.txt coremltools onnx onnx-simplifier onnxruntime openvino-dev tensorflow-cpu 

step 12 : python export.py --weights yolov5s.pt --include engine --device 0
        Detect:          python detect.py --weights yolov5s.engine
        Validate:        python val.py --weights yolov5s.engine
        PyTorch Hub:     model = torch.hub.load('ultralytics/yolov5', 'custom', 'yolov5s.engine')
        Visualize:       https://netron.app

step 13 : python detect.py --weights yolov5s.engine --source 0 --device 0
        : 0.8ms pre-process, 7.2ms inference, 1.3ms NMS per image at shape (1, 3, 640, 640)

========== model training ===============

step 14 : Download dataset (https://app.roboflow.com/trial-8jh5l/hard-hat-sample-tvzek/1)
